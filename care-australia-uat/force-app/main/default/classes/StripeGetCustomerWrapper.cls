//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class StripeGetCustomerWrapper {

	
	public String id {get;set;} 
	public String object_Z {get;set;} // in json: object
	public Integer balance {get;set;} 
	public Integer created {get;set;} 
	public Boolean delinquent {get;set;} 
	public Object description {get;set;} 
	public Object discount {get;set;} 
	public String email {get;set;} 
	public String invoice_prefix {get;set;} 
	public Boolean livemode {get;set;} 
	public Metadata metadata {get;set;} 
	public String name {get;set;} 
	public Integer next_invoice_sequence {get;set;} 
	public String phone {get;set;} 
	public String tax_exempt {get;set;} 

	public StripeGetCustomerWrapper(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'id') {
						id = parser.getText();
					} else if (text == 'object') {
						object_Z = parser.getText();
					} else if (text == 'balance') {
						balance = parser.getIntegerValue();
					} else if (text == 'created') {
						created = parser.getIntegerValue();
					} else if (text == 'delinquent') {
						delinquent = parser.getBooleanValue();
					} else if (text == 'description') {
						description = parser.readValueAs(Object.class);
					} else if (text == 'discount') {
						discount = parser.readValueAs(Object.class);
					} else if (text == 'email') {
						email = parser.getText();
					} else if (text == 'invoice_prefix') {
						invoice_prefix = parser.getText();
					} else if (text == 'livemode') {
						livemode = parser.getBooleanValue();
					} else if (text == 'metadata') {
						metadata = new Metadata(parser);
					} else if (text == 'name') {
						name = parser.getText();
					} else if (text == 'next_invoice_sequence') {
						next_invoice_sequence = parser.getIntegerValue();
					} else if (text == 'phone') {
						phone = parser.getText();
					} else if (text == 'tax_exempt') {
						tax_exempt = parser.getText();
					} else {
						System.debug(LoggingLevel.WARN, 'StripeGetCustomerWrapper consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Metadata {
		public String first_name {get;set;} 
		public String last_name {get;set;} 
        public String sf_contact_id {get;set;}

		public Metadata(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'firstName') {
							first_name = parser.getText();
						} else if (text == 'lastName') {
							last_name = parser.getText();
						} else if (text == 'sf_contact_id') {
							sf_contact_id = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Metadata consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static StripeGetCustomerWrapper parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new StripeGetCustomerWrapper(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
}